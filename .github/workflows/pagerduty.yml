name: Find next person on call
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: 0 8 * * 1


jobs:
  run-action:
    runs-on: ubuntu-latest
    steps:
      - name: Developer Weekday Schedule
        id: dev-weekday
        uses: mxie/pagerduty-oncall-action@main
        with:
          token: ${{ secrets.PAGERDUTY_TOKEN }}
          schedule-id: PPQBFP9

      - name: Critical Issues Schedule
        if: always()
        id: critical-issue
        uses: mxie/pagerduty-oncall-action@main
        with:
          token: ${{ secrets.PAGERDUTY_TOKEN }}
          schedule-id: PYJ6MPP

      - name: Critical Escalation Schedule
        if: always()
        id: escalation
        uses: mxie/pagerduty-oncall-action@main
        with:
          token: ${{ secrets.PAGERDUTY_TOKEN }}
          schedule-id: P2SAWCS
          
      - name: Devops Schedule
        if: always()
        id: devops
        uses: mxie/pagerduty-oncall-action@main
        with:
          token: ${{ secrets.PAGERDUTY_TOKEN }}
          schedule-id: P51TQWY

      - name: Dev Weekday
        if: always()
        run: echo ${{ steps.dev-weekday.outputs.person }} is on call

      - name: Critical Issues
        if: always()
        run: echo ${{ steps.critical-issue.outputs.person }} is on call

      - name: Escalation
        if: always()
        run: echo ${{ steps.escalation.outputs.person }} is on call

      - name: Devops
        if: always()
        run: echo ${{ steps.devops.outputs.person }} is on call

      - name: Slack Message                     
        if: always()
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          method: conversations.setTopic
          args: |
            {
              "channel": "oncall-rota",
              "topic": "Hello there Jamie!",
              "token": "${{ secrets.SLACK_TOKEN }}"
            }

      - name: Slack Message                     
        if: always()
        id: users
        uses: hbfernandes/slack-action@1.0
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          method: users.lookupByEmail
          args: |
            {
              "email": "jamie.hill@beautypie.com",
              "token": "${{ secrets.SLACK_TOKEN }}"
            }

      - name: Deploy Stage
        uses: fjogeleit/http-request-action@v1
        if: always()
        id: user-email
        with:
          url: https://slack.com/api/users.lookupByEmail
          method: 'GET'
          customHeaders: '{"Content-Type": "application/x-www-form-urlencoded"}'
          data: '{"email": "jamie.hill@beautypie.com", "token": "${{ secrets.SLACK_TOKEN }}"}'

      - name: Users email
        if: always()
        run: echo ${{ steps.user-email.outputs.response }}
      

      - name: Slack Message                     
        if: always()
        uses: slackapi/slack-github-action@v1.18.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "text": "PagerDuty Rota Nofication: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
