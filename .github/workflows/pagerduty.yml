name: Find next person on call
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: 0 8 * * 1


jobs:
  run-action:
    runs-on: ubuntu-latest
    steps:
      - name: Developer Weekday Schedule
        uses: fjogeleit/http-request-action@v1
        if: always()
        id: weekday-pd
        with:
          url: https://api.pagerduty.com/oncalls
          method: 'GET'
          customHeaders: '{"Content-Type": "application/vnd.pagerduty+json;version=2", "Authorization": "Token token=${{ secrets.PAGERDUTY_TOKEN }}"}'
          contentType: application/json
          bearerToken: ${{ secrets.SLACK_TOKEN }}

      - name: Developer Weekday Schedule Output
        if: always()
        run: echo ${{ fromJson(steps.weekday-pd.outputs.response).oncalls }}

      - name: Developer Weekday Schedule
        id: dev-weekday
        uses: mxie/pagerduty-oncall-action@main
        with:
          token: ${{ secrets.PAGERDUTY_TOKEN }}
          schedule-id: PPQBFP9

      - name: Critical Issues Schedule
        if: always()
        id: critical
        uses: mxie/pagerduty-oncall-action@main
        with:
          token: ${{ secrets.PAGERDUTY_TOKEN }}
          schedule-id: PYJ6MPP

      - name: Critical Escalation Schedule
        if: always()
        id: escalation
        uses: mxie/pagerduty-oncall-action@main
        with:
          token: ${{ secrets.PAGERDUTY_TOKEN }}
          schedule-id: P2SAWCS
          
      # - name: Devops Schedule
      #   if: always()
      #   id: devops
      #   uses: mxie/pagerduty-oncall-action@main
      #   with:
      #     token: ${{ secrets.PAGERDUTY_TOKEN }}
      #     schedule-id: P51TQWY

      # - name: Dev Weekday
      #   if: always()
      #   run: echo ${{ steps.dev-weekday.outputs.person }} is on call

      # - name: Critical Issues
      #   if: always()
      #   run: echo ${{ steps.critical.outputs.person }} is on call

      # - name: Escalation
      #   if: always()
      #   run: echo ${{ steps.escalation.outputs.person }} is on call

      # - name: Devops
      #   if: always()
      #   run: echo ${{ steps.devops.outputs.person }} is on call

      # - name: Slack Message                     
      #   if: always()
      #   uses: hbfernandes/slack-action@1.0
      #   env:
      #     SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      #   with:
      #     method: conversations.setTopic
      #     args: |
      #       {
      #         "channel": "oncall-rota",
      #         "topic": "Hello there Jamie!",
      #         "token": "${{ secrets.SLACK_TOKEN }}"
      #       }

      - name: Weekday Email
        uses: fjogeleit/http-request-action@v1
        if: always()
        id: weekday-email
        with:
          url: https://slack.com/api/users.lookupByEmail?email=${{ steps.dev-weekday.outputs.person }}
          method: 'GET'
          contentType: application/x-www-form-urlencoded
          bearerToken: ${{ secrets.SLACK_TOKEN }}

      - name: Critical Email
        uses: fjogeleit/http-request-action@v1
        if: always()
        id: critical-email
        with:
          url: https://slack.com/api/users.lookupByEmail?email=${{ steps.critical.outputs.person }}
          method: 'GET'
          contentType: application/x-www-form-urlencoded
          bearerToken: ${{ secrets.SLACK_TOKEN }}

      - name: Escalation Email
        uses: fjogeleit/http-request-action@v1
        if: always()
        id: escalation-email
        with:
          url: https://slack.com/api/users.lookupByEmail?email=${{ steps.escalation.outputs.person }}
          method: 'GET'
          contentType: application/x-www-form-urlencoded
          bearerToken: ${{ secrets.SLACK_TOKEN }}

      - name: Weekday email
        if: always()
        run: echo ${{ fromJson(steps.weekday-email.outputs.response).user.profile.email }}

      - name: Critical email
        if: always()
        run: echo ${{ fromJson(steps.critical-email.outputs.response).user.profile.email }}

      - name: Escalation email
        if: always()
        run: echo ${{ fromJson(steps.escalation-email.outputs.response).user.profile.email }}

      # - name: Slack Message                     
      #   if: always()
      #   uses: slackapi/slack-github-action@v1.18.0
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      #   with:
      #     payload: |
      #       {
      #         "text": "PagerDuty Rota Nofication: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
      #         "blocks": [
      #           {
      #             "type": "section",
      #             "text": {
      #               "type": "mrkdwn",
      #               "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      #             }
      #           }
      #         ]
      #       }
