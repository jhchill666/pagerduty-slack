name: PagerDuty Rota Notifier
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: 0 8 * * 1

jobs:
  Oncall:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Rotas
        uses: fjogeleit/http-request-action@v1
        id: schedules
        if: always()
        with:
          url: https://api.pagerduty.com/oncalls?schedule_ids[]=PYJ6MPP&schedule_ids[]=P2SAWCS&schedule_ids[]=P51TQWY
          method: 'GET'
          contentType: application/json
          bearerToken: ${{ secrets.SLACK_TOKEN }}
          customHeaders: |
            {
              "Authorization": "Token token=${{ secrets.PAGERDUTY_TOKEN }}",
              "Content-Type": "application/vnd.pagerduty+json;version=2"
            }

      # - name: Slack Message                     
      #   if: always()
      #   uses: hbfernandes/slack-action@1.0
      #   env:
      #     SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      #   with:
      #     method: conversations.setTopic
      #     args: |
      #       {
      #         "channel": "oncall-rota",
      #         "topic": "Hello there Jamie!",
      #         "token": "${{ secrets.SLACK_TOKEN }}"
      #       }

      # - name: Weekday Email
      #   uses: fjogeleit/http-request-action@v1
      #   if: always()
      #   id: weekday-email
      #   with:
      #     url: https://slack.com/api/users.lookupByEmail?email=${{ steps.dev-weekday.outputs.person }}
      #     method: 'GET'
      #     contentType: application/x-www-form-urlencoded
      #     bearerToken: ${{ secrets.SLACK_TOKEN }}

      # - name: Weekday email
      #   if: always()
      #   run: echo ${{ fromJson(steps.weekday-email.outputs.response).user.profile.email }}

      - name: Format Date
        id: date
        run: |
          start_time=${{fromJson(steps.schedules.outputs.response).oncalls[0].start}}
          echo "::set-output name=date::$(date -d "$start_time" +'%c')"

      - name: Slack Message                     
        if: always()
        uses: slackapi/slack-github-action@v1.18.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
              "text": "PagerDuty Rota Nofication",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":clock530: New rota starts at ${{ steps.date.outputs.date }}\n\n${{fromJson(steps.schedules.outputs.response).oncalls[0].schedule.summary}}: `${{fromJson(steps.schedules.outputs.response).oncalls[0].user.summary}}`\n${{fromJson(steps.schedules.outputs.response).oncalls[1].schedule.summary}}: `${{fromJson(steps.schedules.outputs.response).oncalls[1].user.summary}}`\n${{fromJson(steps.schedules.outputs.response).oncalls[2].schedule.summary}}: `${{fromJson(steps.schedules.outputs.response).oncalls[2].user.summary}}`"
                  }
                }
              ]
            }
